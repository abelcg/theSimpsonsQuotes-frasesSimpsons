{"version":3,"sources":["logo.png","components/Frases.js","components/Spinner.js","App.js","reportWebVitals.js","index.js"],"names":["Frases","props","Card","className","Body","src","personaje","image","alt","character","Title","Text","quote","Spinner","App","useState","setPersonaje","carga","setCarga","useEffect","consultaApi","a","fetch","respuesta","json","dato","console","log","setTimeout","mostrarComponente","logo","Button","variant","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAAe,MAA0B,iC,oCCwB1BA,EApBA,SAACC,GACd,OACE,cAACC,EAAA,EAAD,CAAMC,UAAU,QAAhB,SACE,cAACD,EAAA,EAAKE,KAAN,UACE,sBAAKD,UAAU,UAAf,UACE,qBAAKA,UAAU,kBAAf,SACI,qBAAKE,IAAKJ,EAAMK,UAAUC,MAAOC,IAAKP,EAAMK,UAAUG,UAAWN,UAAU,gBAE/E,sBAAKA,UAAU,8EAAf,UACE,cAACD,EAAA,EAAKQ,MAAN,UAAaT,EAAMK,UAAUG,YAC7B,cAACP,EAAA,EAAKS,KAAN,UACCV,EAAMK,UAAUM,mBCAdC,G,MAZC,WACd,OACE,sBAAKV,UAAU,UAAf,UACE,qBAAKA,UAAU,UACf,qBAAKA,UAAU,UACf,qBAAKA,UAAU,UACf,qBAAKA,UAAU,UACf,qBAAKA,UAAU,eCyCNW,MA3Cf,WACE,MAAkCC,mBAAS,IAA3C,mBAAOT,EAAP,KAAkBU,EAAlB,KACA,EAA0BD,oBAAS,GAAnC,mBAAOE,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WACRC,MACC,IAEH,IAAMA,EAAW,uCAAG,8BAAAC,EAAA,6DAClBH,GAAS,GADS,SAEMI,MACtB,gDAHgB,cAEZC,EAFY,gBAKCA,EAAUC,OALX,OAKZC,EALY,OAMlBC,QAAQC,IAAIJ,GACZG,QAAQC,IAAIF,EAAK,IACjBG,YAAW,WAETZ,EAAaS,EAAK,IAElBP,GAAS,KACR,MAbe,4CAAH,qDAiBXW,GACM,IAAVZ,EAAiB,cAAC,EAAD,CAAQX,UAAWA,IAAuB,cAAC,EAAD,IAE7D,OACE,0BAASH,UAAU,uDAAnB,UACE,qBAAKE,IAAKyB,EAAMtB,IAAI,sBACpB,cAACuB,EAAA,EAAD,CACEC,QAAQ,UACR7B,UAAU,iBACV8B,QAAS,kBAAMb,KAHjB,wBAOCS,MClCQK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.50fc25c6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.fd4b04d6.png\";","import React from \"react\";\r\nimport Card  from \"react-bootstrap/card\";\r\n//import {Button, Card } from \"react-bootstrap\"\r\n\r\nconst Frases = (props) => {\r\n  return (\r\n    <Card className=\"w-100\">\r\n      <Card.Body>\r\n        <div className=\"row g-5\">\r\n          <div className=\"col-12 col-md-4\">\r\n              <img src={props.personaje.image} alt={props.personaje.character} className=\"img-fluid\"/>\r\n          </div>\r\n          <div className=\"col-12 col-md-8 d-flex flex-column justify-content-center align-items-start\">\r\n            <Card.Title>{props.personaje.character}</Card.Title>\r\n            <Card.Text>\r\n            {props.personaje.quote}\r\n            </Card.Text>\r\n          </div>\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Frases;\r\n","import React from \"react\";\r\nimport \"./spinner.css\"\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"spinner\">\r\n      <div className=\"rect1\"></div>\r\n      <div className=\"rect2\"></div>\r\n      <div className=\"rect3\"></div>\r\n      <div className=\"rect4\"></div>\r\n      <div className=\"rect5\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import logo from \"./logo.png\";\r\nimport \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Button from \"react-bootstrap/button\";\r\nimport Frases from \"./components/Frases\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Spinner from \"./components/Spinner\";\r\n\r\nfunction App() {\r\n  const [personaje, setPersonaje] = useState({});\r\n  const [carga, setCarga] = useState(false);\r\n\r\n  useEffect(() => {\r\n    consultaApi();\r\n  }, []);\r\n\r\n  const consultaApi = async () => {\r\n    setCarga(false)\r\n    const respuesta = await fetch(\r\n      \"https://thesimpsonsquoteapi.glitch.me/quotes\"\r\n    );\r\n    const dato = await respuesta.json();\r\n    console.log(respuesta);\r\n    console.log(dato[0]);\r\n    setTimeout(() => {\r\n      // guardar en el state\r\n      setPersonaje(dato[0]);\r\n      // mostrar el componente frase\r\n      setCarga(true);\r\n    }, 1500);\r\n  };\r\n  // operador  ternario\r\n  // (condicion logica) ? (codigo a ejecutar cuando es verdadero) : (cuando la condicion es falsa)\r\n  const mostrarComponente =\r\n    carga === true ? <Frases personaje={personaje}></Frases> : <Spinner />;\r\n\r\n  return (\r\n    <section className=\"container my-5 d-flex flex-column align-items-center\">\r\n      <img src={logo} alt=\"The Simpsons logo\" />\r\n      <Button\r\n        variant=\"warning\"\r\n        className=\"my-5 px-1 w-50\"\r\n        onClick={() => consultaApi()}\r\n      >\r\n        Get Quotes\r\n      </Button>\r\n      {mostrarComponente}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}